---
import Section from "./Section.astro";
import type { ExperienceProps } from "@types";

interface Props {
  experience: ExperienceProps[];
}

const { experience } = Astro.props;
---

<Section text="Work Experience" href="experience">
  <div class="flex flex-col gap-12">
    {
      experience.map(({ company, position, startDate, endDate, repoLink, summary }) => (
        <div class="experience-card">
          <div class="card-content">
            <div class="card-header mb-4">
              <h3 class="font-serif text-2xl font-semibold text-white">
                {company}
              </h3>
              <div class="text-sm text-white/70">
                {startDate} — {endDate}
              </div>
            </div>
            <h4 class="mb-5 font-serif text-xl font-medium text-primary">
              {position}
            </h4>
            
            {Array.isArray(summary) ? (
              <ul class="list-none space-y-3">
                {summary.map((log) => (
                  <li class="relative pl-8 text-base text-neutral before:absolute before:top-1.5 before:left-0 before:h-1.5 before:w-1.5 before:rounded-full before:bg-cyan-400">
                    {log}
                  </li>
                ))}
              </ul>
            ) : (
              <p class="text-base text-neutral">{summary}</p>
            )}

            {repoLink && (
              <a
                href={repoLink}
                class="mt-6 inline-flex items-center gap-2 text-sm text-white/80 hover:text-white transition-colors"
                target="_blank"
                rel="noopener noreferrer"
              >
                <img src="/icons/github.webp" alt="GitHub" class="h-5 w-5" />
                <span>GitHub Repo Link</span>
                <span class="text-xl">↗</span>
              </a>
            )}
          </div>
        </div>
      ))
    }
  </div>
</Section>

<style>
  .experience-card {
    background: rgba(10, 10, 20, 0.6);
    border-radius: 16px;
    padding: 2px;
    position: relative;
    overflow: hidden;
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .experience-card::before {
    content: '';
    position: absolute;
    top: 0; right: 0; bottom: 0; left: 0;
    z-index: -1;
    margin: -2px;
    border-radius: inherit;
    background: conic-gradient(
      from 180deg at 50% 50%,
      #1f005c, #003666, #00766c, #a88a00, #ff0000, #c300c3, #6a00ff, #1f005c
    );
    opacity: 0;
    transition: opacity 0.4s ease;
    animation: rotate 6s linear infinite paused;
  }

  .experience-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
  }

  .experience-card:hover::before {
    opacity: 1;
    animation-play-state: running;
  }

  .card-content {
    background: #111116; /* A slightly different dark shade for depth */
    border-radius: 14px;
    padding: 2rem;
  }

  @keyframes rotate {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
</style>